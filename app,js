///MODULE to keep them seperate 
var budgetController=(function(){ //IEFE used to make a module
    //constructors for income and expenses
   var Expense=function(id,description,value){
       this.id=id;
       this.description=description;
       this.value=value;
       this.percentage=-1;
   };
    Expense.prototype.calcPercentage=function(totalIncome){
        if(totalIncome>0){
        this.percentage=Math.round((this.value/totalIncome)*100); 
        }
        else{
            this.percentage=-1;
        }
    };
    Expense.prototype.getPercentage=function(){
        return this.percentage;
    }
   var Income=function(id,description,value){
       this.id=id;
       this.description=description;
       this.value=value;
   };
    //data structure
    var allExpences=[];
    var data = {
        allItems:{
            exp:[],
            inc:[]
        },
        totals:{
            exp:0,
            inc:0
        },
        budget:0,
        percentage:-1
    };
    //
    var calculateTotal=function(type){
        var sum=0;
        for(var i=0;i<data.allItems[type].length;i++){
            sum+=data.allItems[type][i].value;
        }
        data.totals[type]=sum;
    };
    
    return{
        addItem:function(type,des,val){
            if (data.allItems[type].length>0){
                var ID=data.allItems[type][data.allItems[type].length-1].id+1;
            }
            else{
                var ID=0;
            }
            //create new items based onn the inc or exp type from the user
            if(type==='exp'){
                var newItem=new Expense(ID,des,val);
            }
            else if(type=='inc'){
                var newItem=new Income(ID,des,val);
            }
            //push the item into data structures
            data.allItems[type].push(newItem);
            return newItem;
            
        },
        test:function(){
        console.log(data);
    },
        calculateBudget:function(){
            //calculate total icome and expenses
            calculateTotal('inc');
            calculateTotal('exp');
            //calculate the budget :income-expenses
            data.budget=data.totals.inc-data.totals.exp;
            //calaculate the percentage of income that we spent
            if(data.totals.inc>0){
                 data.percentage=Math.round((data.totals.exp/data.totals.inc)*100);
            }
            else{
                data.percentage=-1;
            }
           
        },
        calculatePercentages:function(){
            for(var i=0;i<data.allItems.exp.length;i++){
                data.allItems.exp[i].calcPercentage(data.totals.inc);
            }
        },
        getPercentages:function(){
            var allPercentages=[];
            for(var i=0;i<data.allItems.exp.length;i++){
                allPercentages.push(data.allItems.exp[i].getPercentage());
            }
            return allPercentages;
        },
        getBudget:function(){
            return{
                budget:data.budget,
                totalInc:data.totals.inc,
                totalExp:data.totals.exp,
                percentage:data.percentage
            }
        },
        deleteItem:function(type,id){
            var ids=[];
            for(var i=0;i<data.allItems[type].length;i++){
                ids.push(data.allItems[type][i].id);//making an arry of ids of all objects
            }
            var index=ids.indexOf(id);
            if(index!==-1){
                data.allItems[type].splice(index,1);//start at index and delete one next element 
            }
        }
    };
    
}());




//Module 
var UIController=(function(){
    //object created to select DOM strings
    var DOMStrings={
        inputType:'.add__type',
        inputDescription:'.add__description',
        inputValue:'.add__value',
        inputBtn:'.add__btn',
        incomeContainer:'.income__list',
        expensesContainer:'.expenses__list',
        budgetLabel:'.budget__value',
        incomeLabel:'.budget__income--value',
        expenseLabel:'.budget__expenses--value',
        percentageLabel:'.budget__expenses--percentage',
        container:'.container',
        expensesPercLabel:'item__percentage',
        dateLabel:'.budget__title--month'
    };
    return{
        getinput:function(){ //to public the fucntion we have to place it in the return object
            return{
                type:document.querySelector(DOMStrings.inputType).value,//either inc or exp 
                description:document.querySelector(DOMStrings.inputDescription).value,
                value:parseFloat(document.querySelector(DOMStrings.inputValue).value)
            };
           
            
        },
        getDOMStrings:function(){ //Passing the DOMstring object into the public
            return DOMStrings;
        },
        addListItem:function(obj,type){ //fucntion for displaying object onto UI
            //Create HTML strin with placeholder text
            if(type==='inc'){
            var element=DOMStrings.incomeContainer;//selecting the class from the html 
            var html='<div class="item clearfix" id="inc-%id%"> <div class="item__description">%description%</div> <div class="right clearfix"> <div class="item__value">%value%</div> <div class="item__delete"> <button class="item__delete--btn"><i class="ion-ios-close-outline"></i></button> </div></div></div>';
            }
            else{
            var element=DOMStrings.expensesContainer;

            var html='<div class="item clearfix" id="exp-%id%"><div class="item__description">%description%</div><div class="right clearfix"><div class="item__value">%value%</div><div class="item__percentage">21%</div><div class="item__delete"><button class="item__delete--btn"><i class="ion-ios-close-outline"></i></button></div></div></div>'
            }
            //replace the placeholder data with some data
            var newHtml=html.replace('%id%',obj.id);
            newHtml=newHtml.replace('%description%',obj.description);
            newHtml=newHtml.replace('%value%',obj.value);
            //insert the HTML into the  DOM 
            document.querySelector(element).insertAdjacentHTML('beforeend',newHtml);//beforeend will put ouer element as last child 
        },
        deleteListItem:function(selectorID){
            document.getElementById(selectorID).parentNode.removeChild(document.getElementById(selectorID));//to delete a child we have to 
            //go up to the parent and then delete the child 
        },
        clearFields:function(){
            var fields=document.querySelectorAll(DOMStrings.inputDescription+', '+DOMStrings.inputValue);//it returns a list
            var fieldsArr=Array.prototype.slice.call(fields);
            for(var i=0;i<fieldsArr.length;i++){
                fieldsArr[i].value="";
            }
            fieldsArr[0].focus();
        },
        displayBudget:function(obj){
            document.querySelector(DOMStrings.budgetLabel).textContent=obj.budget;
            document.querySelector(DOMStrings.incomeLabel).textContent=obj.totalInc;
            document.querySelector(DOMStrings.expenseLabel).textContent=obj.totalExp;
            document.querySelector(DOMStrings.percentageLabel).textContent=obj.percentage;
        },
        displayPercentages:function(percentages){
            document.querySelectorAll(DOMStrings.expensesPercLabel)//returns node list
        },
        displayMonth:function(){
            var months=['January','Faburary','March','April','May','June','July','August','September','October','November','December'];
            var now =new Date();
            var year=now.getFullYear();
            var month=now.getMonth();
            document.querySelector(DOMStrings.dateLabel).textContent=months[month]+' '+year;
        },
    };
    
})();




//controller module is used to connect the other two modules
//global controller
var controller=(function(budgetCtrl,UIctrl){
    var setupEventListener=function(){
        var DOM=UIctrl.getDOMStrings();     //getting the DOMstrings object in from UIController
        document.querySelector(DOM.inputBtn).addEventListener('click',ctrlAddItem);
        document.addEventListener('keypress',function(event){  //add event listener to global document 
            if (event.keyCode===13){
                ctrlAddItem();
            }
        });
        
        document.querySelector(DOM.container).addEventListener('click',ctrlDeleteItem);
        document.querySelector(DOM.inputType).addEventListener('change',UIctrl.changedType);
    }
    
    var updateBudget=function(){
        //calculate budget
        budgetCtrl.calculateBudget();
        //return budget
        var budget=budgetCtrl.getBudget();
        //display budget on UI
        UIctrl.displayBudget(budget);
    };
    var updatePercentages=function(){
      //calculate percentages
        budgetCtrl.calculatePercentages();
        var percentages=budgetCtrl.getPercentages();
        //read from budget contoller
        console.log(percentages);
        
        //update UI with new percentages
    };
    var ctrlAddItem=function(){
        //get the filled input data 
        
        var input=UIctrl.getinput();
        if(input.description!=="" && !isNaN(input.value) && input.value>0){
            //add the item to the budget controler
            var newItem=budgetCtrl.addItem(input.type,input.description,input.value);
       
            //add the item to UI
            UIctrl.addListItem(newItem,input.type);
            UIctrl.clearFields();
            //calculate and update budget
            updateBudget();
            //calculate and update percentages
            updatePercentages();
        }
        
        
    };
    var ctrlDeleteItem=function(event){
        var itemID=event.target.parentNode.parentNode.parentNode.parentNode.id;
        if(itemID){
            var splitID=itemID.split('-');
            var type=splitID[0];
            var ID=parseInt(splitID[1]);
            budgetCtrl.deleteItem(type,ID);
            UIctrl.deleteListItem(itemID);
            updateBudget();
            updatePercentages();
        }
    }
    return{
        init:function(){
            UIctrl.displayMonth();
            setupEventListener();
            UIctrl.displayBudget({
                budget:0,
                totalInc:0,
                totalExp:0,
                percentage:-1
            });
        }
    };
  
    
    
})(budgetController,UIController);
controller.init();

